plugins {
	id 'java'
	id 'application'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.google.protobuf' version '0.9.4'
}

group = 'com.cs301'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
	maven {
		url "https://packages.confluent.io/maven/"
	}
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	
	// Environment Variables
	implementation 'me.paulschwarz:spring-dotenv:4.0.0'
	
	// Kafka
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.kafka:spring-kafka-test'
	implementation 'io.confluent:kafka-protobuf-serializer:7.5.1'
	implementation 'io.confluent:kafka-schema-registry-client:7.5.1'
	implementation 'com.google.protobuf:protobuf-java:3.25.5'
	implementation 'com.google.protobuf:protobuf-java-util:3.25.5'
	// Swagger
	implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0")

	// Database
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Jackson for JSON and Java 8 Date/Time
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc:3.25.5'
	}
	generateProtoTasks {
		all().each { task ->
			task.builtins {
				java {}
			}
		}
	}
}

test {
	useJUnitPlatform()
}

// Define the main class for the application
application {
    mainClass = 'com.cs301.client_service.ClientServiceApplication'
}

// Add generated sources to the source sets
sourceSets {
    main {
        java {
            srcDirs += "$projectDir/build/generated/source/proto/main/java"
        }
    }
}

// Task to run the A2C Kafka consumer
task runA2CConsumer(type: JavaExec) {
    description = 'Runs the A2C Kafka consumer'
    group = 'application'
    
    classpath = sourceSets.test.runtimeClasspath
    mainClass = 'com.cs301.client_service.kafka.TestA2CConsumer'
}

// Task to run the C2C Kafka consumer
task runC2CConsumer(type: JavaExec) {
    description = 'Runs the C2C Kafka consumer'
    group = 'application'
    
    classpath = sourceSets.test.runtimeClasspath
    mainClass = 'com.cs301.client_service.kafka.TestC2CConsumer'
}

// Task to run the Log Kafka consumer
task runLogConsumer(type: JavaExec) {
    description = 'Runs the Log Kafka consumer'
    group = 'application'
    
    classpath = sourceSets.test.runtimeClasspath
    mainClass = 'com.cs301.client_service.kafka.TestLogConsumer'
}
